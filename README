DESCRIPTION:

A Toolbox for Algorithms
TODO: add graph-processing algorithms and string processing algorithms

FEATURES:
-----------------------------------------------------------------
src:
1)link.java defines a link class
  linkList.java defines a linked list class, where we use relationships between the items to locate it in list
  firstLastList.java defines a double-ended list function, where we can insert a new item directly at the end of the list as well as the biginning

2)Stack.java defines a stack class based on linked list
  Stack.py defines a stack class
  Stack.cpp defines stack based on array and linked list
  PostfixExpression.py computes value of postfix, using to test stack structure

  linkStack.java defines a stack class, implemented by a linked list
HOW TO COMPILE:
  >javac link.java linkList.java linkStack.java linkStackApp.java
  >java linkStackApp

3)Queue.java defines a queue class (FIFO) based on Resizing array
  Queue.cpp defines queue based on linked list
  Queue.py defines a queue class and a priority queue class

4)Selection.java defines the selection sort
  Insertion.java defines the insertion sort
  ArraySort.java defines Bubble sort, Selection Sort, Insertion Sort and shellSort functions

  ArraySortApp.java is a test code
  SortDateApp.java is a client to test the sort method

5)Merge.java defines Top-down mergesort function
6)Quick.java defines the quick sort function

7)PriorityQueue.java is an implementation about priority queue,maintained in a heap-ordered complete binary tree

8)Tree.py defines a tree  class

HOMEWORK:
-----------------------------------------------------------------
Questions in The Stanford "Algorithms:Design and Analysis" Course
homework:
1)Count.cpp computes the number of inversions in the file given (based on MergeSort idea)
2)ComputeTotalNum.cpp computes the total number of comparisons in the file given (based on QuickSort idea)

ALGORITHMS_PRINCETON:
-----------------------------------------------------------------
>Related exercises and Assignments in the Princeton Algorithms Course
>see the detailed ~algorithms_princeton/README


CHALLENGE: some challenging programming problems
-----------------------------------------------------------------
1)Fibonacci.cpp computes the nth Fibonacci number based on different algorithms
