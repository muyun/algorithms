DESCRIPTION:

code about Algorithms
code about Data Structure
TODO: a toolbox for data structure and algorithms

FEATURES:
--------------
src:
1)ResizingArrayStack.java defines a stack implementation with a resizing array
2)queue.java defines a queue class (FIFO)
  queue.cpp defines queue based on linked list
  queue.py defines a queue class and a priority queue class
3)link.java defines a link class
  linkList.java defines a linked list class, where we use relationships between the items to locate it in list
  firstLastList.java defines a double-ended list function, where we can insert a new item directly at the end of the list as well as the biginning
4)linkStack.java defines a stack class, implemented by a linked list
HOW TO COMPILE:
  >javac link.java linkList.java linkStack.java test/linkStackApp.java
  >java linkStackApp
  stack.py defines a stack class
  stack.cpp defines stack based on array and linked list
5)tree.py defines a tree  class
6)ArraySort.java defines Bubble sort, Selection Sort, Insertion Sort and shellSort functions 
7)Merge.java defines Top-down mergesort function
8)PostfixExpression.py computes value of postfix, using to test stack structure

HOMEWORK:
--------------
Questions on The Course "Algorithms:Design and Analysis" on Stanford
homework:
1)Count.cpp computes the number of inversions in the file given (based on MergeSort idea)
2)ComputeTotalNum.cpp computes the total number of comparisons in the file given (based on QuickSort idea)

ALGORITHMS_PRINCETON:
--------------
Related exercises and Assignments on the Course "Algorithms" on Princeton
1) QuickUnion.java is the Quick-Find question using Quick-Union with weighted implementation

CHALLENGE: some programming problem challenges
--------------

